// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role      @default(USER)
  accounts      Account[]
  sessions      Session[]
  posts         Post[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Post {
  id          String      @id @default(cuid())
  title       String
  slug        String      @unique
  excerpt     String      @db.Text
  content     String      @db.LongText
  image       String?
  category    String
  tags        String      @db.Text // JSON string of tags array
  status      PostStatus  @default(DRAFT)
  readTime    String
  authorId    String
  author      User        @relation(fields: [authorId], references: [id])
  publishedAt DateTime?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([status])
  @@index([category])
  @@index([publishedAt])
}

model Contact {
  id        String      @id @default(cuid())
  firstName String
  lastName  String
  email     String
  phone     String?
  subject   String
  message   String      @db.Text
  status    ContactStatus @default(UNREAD)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@index([status])
  @@index([createdAt])
}

enum Role {
  USER
  ADMIN
  EDITOR
}

enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum ContactStatus {
  UNREAD
  READ
  REPLIED
  ARCHIVED
}